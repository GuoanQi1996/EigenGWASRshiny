G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
M=c(20000)
fst1=0.05
fst2=0.01
for(m in 1:length(M)) {
P=runif(M[m], 0.2, 0.8)
Sz=c(100, 100, 100, 100, 100, 100)
Fq=matrix(0, length(Sz), M[m])
Fq[1,]=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P3=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P2=(0.5*Fq[1,]+0.5*P3)
Fq[3,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[4,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[2,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
Fq[5,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
Fq[6,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
G=matrix(0, sum(Sz), M[m])
for(i in 1:Sz[1]) {
G[i,] = rbinom(M[m], 2, Fq[1,])
}
for(i in (Sz[1]+1):(Sz[1]+Sz[2])) {
G[i,] = rbinom(M[m], 2, Fq[2,])
}
for(i in (Sz[1]+Sz[2]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[3,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[4,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[5,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+Sz[5]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
M=c(20000)
fst1=0.05
fst2=0.01
for(m in 1:length(M)) {
P=runif(M[m], 0.2, 0.8)
Sz=c(100, 100, 100, 100, 100, 100)
Fq=matrix(0, length(Sz), M[m])
Fq[1,]=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P3=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P2=(0.5*Fq[1,]+0.5*P3)
Fq[3,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[4,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[2,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
Fq[5,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
Fq[6,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
G=matrix(0, sum(Sz), M[m])
for(i in 1:Sz[1]) {
G[i,] = rbinom(M[m], 2, Fq[1,])
}
for(i in (Sz[1]+1):(Sz[1]+Sz[2])) {
G[i,] = rbinom(M[m], 2, Fq[2,])
}
for(i in (Sz[1]+Sz[2]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[3,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[4,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[5,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+Sz[5]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
plot(EigenG$vectors[,1], EigenG$vectors[,2])
M=c(20000)
fst1=0.05
fst2=0.01
for(m in 1:length(M)) {
P=runif(M[m], 0.2, 0.8)
Sz=c(100, 100, 100, 100, 100, 100)
Fq=matrix(0, length(Sz), M[m])
Fq[1,]=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P3=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P2=(0.5*Fq[1,]+0.5*P3)
Fq[3,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[4,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[2,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
Fq[5,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
Fq[6,]=rbeta(M[m], P3*(1-fst2)/fst2, (1-P3)*(1-fst2)/fst2)
G=matrix(0, sum(Sz), M[m])
for(i in 1:Sz[1]) {
G[i,] = rbinom(M[m], 2, Fq[1,])
}
for(i in (Sz[1]+1):(Sz[1]+Sz[2])) {
G[i,] = rbinom(M[m], 2, Fq[2,])
}
for(i in (Sz[1]+Sz[2]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[3,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[4,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[5,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+Sz[5]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
M=c(20000)
fst1=0.05
fst2=0.01
fst3=0.02
for(m in 1:length(M)) {
P=runif(M[m], 0.2, 0.8)
Sz=c(100, 100, 100, 100, 100, 100)
Fq=matrix(0, length(Sz), M[m])
Fq[1,]=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P3=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P2=(0.5*Fq[1,]+0.5*P3)
Fq[3,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[4,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[2,]=rbeta(M[m], P3*(1-fst2)/fst3, (1-P3)*(1-fst2)/fst3)
Fq[5,]=rbeta(M[m], P3*(1-fst2)/fst3, (1-P3)*(1-fst2)/fst3)
Fq[6,]=rbeta(M[m], P3*(1-fst2)/fst3, (1-P3)*(1-fst2)/fst3)
G=matrix(0, sum(Sz), M[m])
for(i in 1:Sz[1]) {
G[i,] = rbinom(M[m], 2, Fq[1,])
}
for(i in (Sz[1]+1):(Sz[1]+Sz[2])) {
G[i,] = rbinom(M[m], 2, Fq[2,])
}
for(i in (Sz[1]+Sz[2]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[3,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[4,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[5,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+Sz[5]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
M=c(20000)
fst1=0.05
fst2=0.01
fst3=0.01
for(m in 1:length(M)) {
P=runif(M[m], 0.2, 0.8)
Sz=c(100, 100, 100, 100, 100, 100)
Fq=matrix(0, length(Sz), M[m])
Fq[1,]=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P3=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P2=(0.5*Fq[1,]+0.5*P3)
Fq[3,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[4,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[2,]=rbeta(M[m], P3*(1-fst2)/fst3, (1-P3)*(1-fst2)/fst3)
Fq[5,]=rbeta(M[m], P3*(1-fst2)/fst3, (1-P3)*(1-fst2)/fst3)
Fq[6,]=rbeta(M[m], P3*(1-fst2)/fst3, (1-P3)*(1-fst2)/fst3)
G=matrix(0, sum(Sz), M[m])
for(i in 1:Sz[1]) {
G[i,] = rbinom(M[m], 2, Fq[1,])
}
for(i in (Sz[1]+1):(Sz[1]+Sz[2])) {
G[i,] = rbinom(M[m], 2, Fq[2,])
}
for(i in (Sz[1]+Sz[2]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[3,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[4,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[5,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+Sz[5]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
M=c(20000)
fst1=0.05
fst2=0.01
fst3=0.01
for(m in 1:length(M)) {
P=runif(M[m], 0.2, 0.8)
Sz=c(100, 100, 100, 100, 100, 100)
Fq=matrix(0, length(Sz), M[m])
Fq[1,]=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P3=rbeta(M[m], P*(1-fst1)/fst1, (1-P)*(1-fst1)/fst1)
P2=(0.5*Fq[1,]+0.5*P3)
Fq[3,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[4,]=rbeta(M[m], P2*(1-fst2)/fst2, (1-P2)*(1-fst2)/fst2)
Fq[2,]=rbeta(M[m], P3*(1-fst3)/fst3, (1-P3)*(1-fst3)/fst3)
Fq[5,]=rbeta(M[m], P3*(1-fst3)/fst3, (1-P3)*(1-fst3)/fst3)
Fq[6,]=rbeta(M[m], P3*(1-fst3)/fst3, (1-P3)*(1-fst3)/fst3)
G=matrix(0, sum(Sz), M[m])
for(i in 1:Sz[1]) {
G[i,] = rbinom(M[m], 2, Fq[1,])
}
for(i in (Sz[1]+1):(Sz[1]+Sz[2])) {
G[i,] = rbinom(M[m], 2, Fq[2,])
}
for(i in (Sz[1]+Sz[2]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[3,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[4,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[5,])
}
for(i in (Sz[1]+Sz[2]+Sz[3]+Sz[4]+Sz[5]+1):sum(Sz)) {
G[i,] = rbinom(M[m], 2, Fq[6,])
}
Gs=apply(G, 2, scale)
GG=Gs %*% t(Gs)
EigenG=eigen(GG)
layout(matrix(1:2, 1, 2))
barplot(EigenG$values[1:20])
plot(EigenG$vectors[,1], EigenG$vectors[,2])
# layout(matrix(1:6, 2, 3, byrow=T))
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[1:100,1], EigenG$vectors[1:100,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[101:200,1], EigenG$vectors[101:200,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[201:300,1], EigenG$vectors[201:300,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[301:400,1], EigenG$vectors[301:400,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[401:500,1], EigenG$vectors[401:500,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
# plot(xlim=range(EigenG$vectors[,1]), ylim=range(EigenG$vectors[,2]), main=paste(M[m], "markers"), EigenG$vectors[501:600,1], EigenG$vectors[501:600,2], bty='n', xlab="PC 1", ylab="PC 2", pch=16)
}
options()
options
options(rpubs.upload.method="internal")
options(rpubs.upload.method)
options(rpubs.upload.method="internal")
help(options)
getOption("rpubs.upload.method")
devtools::install_github("rstudio/rsconnect", ref = "bugfix/multi-status-header")
install.packages("rticles")
m=1000
n=200
h2=0.05
fq=runif(n, 0.1, 0.9)
x=matrix(0, n, m)
for(i in 1:n) {
x[i,]=rbinom(m, 2, fq)
}
plot(fq, colMeans(fq)/2)
plot(fq, colMeans(x)/2)
dim(x)
m=1000
n=200
h2=0.05
fq=runif(m, 0.1, 0.9)
x=matrix(0, n, m)
for(i in 1:n) {
x[i,]=rbinom(m, 2, fq)
}
plot(fq, colMeans(x)/2)
qtl=runif(1, 1, m)
qtl
qtl=floor(runif(1, 1, m))
qtl
y=bv+rnorm(n, sd=sqrt((1-h2)*var(bv)/h2))
bv=x[,qtl]
y=bv+rnorm(n, sd=sqrt((1-h2)*var(bv)/h2))
var(y)
var(bv)
regB=matrix(0, m, 4)
for(i in 1:m) {
mod=lm(y~x[i,])
regB=summary(mod)$coefficients[2,]
}
for(i in 1:m) {
mod=lm(y~x[,i])
regB=summary(mod)$coefficients[2,]
}
regB
regB=matrix(0, m, 4)
for(i in 1:m) {
mod=lm(y~x[,i])
regB[i,]=summary(mod)$coefficients[2,]
}
head(regB)
hist(regB[,4])
m=10000
n=200
h2=0.05
fq=runif(m, 0.1, 0.9)
x=matrix(0, n, m)
for(i in 1:n) {
x[i,]=rbinom(m, 2, fq)
}
qtl=floor(runif(1, 1, m))
bv=x[,qtl]
y=bv+rnorm(n, sd=sqrt((1-h2)*var(bv)/h2))
regB=matrix(0, m, 4)
for(i in 1:m) {
mod=lm(y~x[,i])
regB[i,]=summary(mod)$coefficients[2,]
}
hist(regB[,4])
plot(1:m, -log10(regB[,4]))
abline(h=-log10(0.05/m))
plot(1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](p))))
plot(1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10],italic((p))))
abline(h=-log10(0.05/m))
hist(regB[,4])
plot(1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10],italic((p))))
abline(h=-log10(0.05/m))
hist(regB[,4])
plot(1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))))
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))))
abline(h=-log10(0.05/m), col="red", lwd=2)
hist(regB[,4])
hist(main="p-value distribution", regB[,4])
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))))
abline(h=-log10(0.05/m), col="red", lwd=2)
hist(main=expression(paste(italic(p),"-value distribution)"), regB[,4]))
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))))
abline(h=-log10(0.05/m), col="red", lwd=2)
hist(main=expression(paste(italic(p),"-value distribution)")), regB[,4])
hist(main=expression(paste(italic(p),"-value distribution)"), regB[,4])
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))))
abline(h=-log10(0.05/m), col="red", lwd=2)
hist(main=expression(paste(italic(p),"-value distribution)")), regB[,4])
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))))
abline(h=-log10(0.05/m), col="red", lwd=2)
hist(main=expression(paste(italic(p),"-value distribution")), regB[,4])
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))),
col=ifelse(-log10(regB[,4]) > -log10(0.05/m), "blue"))
abline(h=-log10(0.05/m), col="grey", lty=2)
hist(main=expression(paste(italic(p),"-value distribution")), regB[,4])
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))),
col=ifelse(-log10(regB[,4]) > -log10(0.05/m), "blue", "grey"))
abline(h=-log10(0.05/m), col="blue", lty=2)
hist(main=expression(paste(italic(p),"-value distribution")), regB[,4])
m=10000
n=200
h2=0.05
fq=runif(m, 0.1, 0.9)
x=matrix(0, n, m)
for(i in 1:n) {
x[i,]=rbinom(m, 2, fq)
}
qtl=floor(runif(1, 1, m))
bv=x[,qtl]
y=bv+rnorm(n, sd=sqrt((1-h2)*var(bv)/h2))
regB=matrix(0, m, 4)
for(i in 1:m) {
mod=lm(y~x[,i])
regB[i,]=summary(mod)$coefficients[2,]
}
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))),
col=ifelse(-log10(regB[,4]) > -log10(0.05/m), "blue", "grey"))
abline(h=-log10(0.05/m), col="blue", lty=2)
hist(main=expression(paste(italic(p),"-value distribution")), regB[,4])
hist(main=expression(paste(italic(p),"-value distribution")), regB[,4], xlab="p-value")
order(-log10(regB[,4]))
head(order(-log10(regB[,4])))
qtl
head(rank(-log10(regB[,4])))
m=10000
n=200
h2=0.05
fq=runif(m, 0.1, 0.9)
x=matrix(0, n, m)
for(i in 1:n) {
x[i,]=rbinom(m, 2, fq)
}
qtl=floor(runif(1, 1, m))
bv=x[,qtl]
y=bv+rnorm(n, sd=sqrt((1-h2)*var(bv)/h2))
regB=matrix(0, m, 4)
for(i in 1:m) {
mod=lm(y~x[,i])
regB[i,]=summary(mod)$coefficients[2,]
}
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))),
col=ifelse(-log10(regB[,4]) > -log10(0.05/m), "blue", "grey"))
abline(h=-log10(0.05/m), col="blue", lty=2)
hist(main=expression(paste(italic(p),"-value distribution")), regB[,4], xlab="p-value")
print("Simulated QTL loci is ", qtl)
print("The detected loci is ", which(-log10(regB[,4]) ))
qtl
layout(matrix(1:2, 1, 2))
plot(main="GWAS", 1:m, -log10(regB[,4]), pch=16, cex=0.5, bty='n', xlab="Locus", ylab=expression(paste(-log[10](italic(p)))),
col=ifelse(-log10(regB[,4]) > -log10(0.05/m), "blue", "grey"))
points(qtl, 0, pch=17, col="red")
qtl
which(regB[,4]==max(regB[,4]))
shiny::runApp('git/EigenGWASRDoc/Shiny')
shiny::runApp('git/EigenGWASRDoc/Shiny')
runApp('git/EigenGWASRDoc/Shiny')
runApp('git/EigenGWASRDoc/Shiny')
runApp('git/EigenGWASRDoc/Shiny')
runApp('git/EigenGWASRDoc/Shiny')
shiny::runApp('git/EigenGWASRDoc/Shiny')
runApp('git/EigenGWASRDoc/Shiny')
runApp('git/EigenGWASRDoc/Shiny')
runGitHub("EigenGWASRshiny", "gc5k")
library(shiny)
runGitHub("EigenGWASRshiny", "gc5k")
sessionInfo()
runGitHub("EigenGWASRshiny", "gc5k")
f=runif(m, 0.1, 0.9)
m=10000
n=1000
f=runif(m, 0.1, 0.9)
source("~/R/MyLib/shotgun.R")
G=GenerateGenoDprime(f, ld, n)
ld=runif(m, -0.9, 0.9)
G=GenerateGenoDprime(f, ld, n)
dim(G)
b=rnorm(m)
br=G %*% b
y=br+rnorm(n, 0, sqrt(var(br)/h2*(1-h2)))
h2=0.5
br=G %*% b
y=br+rnorm(n, 0, sqrt(var(br)/h2*(1-h2)))
var(br)
var(y)
setwd("~/git/EigenGWASRshiny")
shiny::runApp()
runApp()
